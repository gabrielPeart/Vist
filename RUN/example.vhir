type %Int = { %Builtin.Int64 }

func @main: () -> %Builtin.Void {
$entry:
  %0 = int_literal 1  	// uses: %1
  %1 = struct %Int (%0: %Builtin.Int64)  	// uses: %x
  variable_decl %x = %1: %Int  	// uses: %y, %2
  variable_decl %y = %x: %Int  	// uses: %3
  %2 = struct_extract %x: %Int, #Int.value  	// uses: %4
  %3 = struct_extract %y: %Int, #Int.value  	// uses: %4
  %4 = builtin i_add %2: %Builtin.Int64, %3: %Builtin.Int64  	// uses: %z
  variable_decl %z = %4: (%Builtin.Int64, %Builtin.Bool)  	// uses: %5
  %5 = tuple_extract %z: (%Builtin.Int64, %Builtin.Bool), 0  	// uses: %u
  variable_decl %u = %5: %Builtin.Int64  	// uses: %6
  %6 = call @-Uprint_i64 (%u: %Builtin.Int64) 
  return ()
}

func @-Uprint_i64: (%Builtin.Int64) -> %Builtin.Void