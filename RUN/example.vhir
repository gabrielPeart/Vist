
type %String = { %Builtin.OpaquePointer, %Builtin.Int64 }
type %Int = { %Builtin.Int64 }
type %Foo.refcounted = { %*Foo, %Builtin.Int32 }
type %Foo = { %Int }
type %RefcountedObject = { %Builtin.OpaquePointer, %Builtin.Int32 }

func @Foo_tI : &thin (%Int) -> %Foo.refcounted {
$entry(%q: %Int):
  %storage = alloc_object %Foo.refcounted  	// user: %0
  %0 = bitcast %storage: %*RefcountedObject to %*Foo.refcounted  	// users: %1, %2, %5, %6
  %1 = retain_object %0: %*Foo.refcounted 
  %2 = struct_element %0: %*Foo.refcounted, #object  	// user: %3
  %3 = load %2: %**Foo  	// user: %a
  %a = struct_element %3: %*Foo, #a  	// user: %4
  store %q in %a: %*I 
  %5 = release_unretained_object %0: %*Foo.refcounted 
  %6 = load %0: %*Foo.refcounted  	// user: %7
  return %6
}

func @print_tI : &thin (%Int) -> %Builtin.Void

func @String_topi64 : &thin (%Builtin.OpaquePointer, %Builtin.Int64) -> %String

func @print_tString : &thin (%String) -> %Builtin.Void

func @main : &thin () -> %Builtin.Void {
$entry:
  %0 = int_literal 1  	// user: %1
  %1 = struct %I (%0: %Builtin.Int64)  	// user: %2
  %2 = call @fooGen_tI (%1: %Int)  	// user: %4
  %3 = alloc %Foo.refcounted  	// users: %4, nil, %5
  store %2 in %3: %*Foo.refcounted 
  %5 = load %3: %*Foo.refcounted  	// user: %a
  variable_decl %a = %5: %Foo.refcounted  	// user: %7
  %6 = alloc %Foo.refcounted  	// users: %7, nil, %8, %9, %14, %22
  store %a in %6: %*Foo.refcounted 
  %8 = retain_object %6: %*Foo.refcounted 
  %9 = struct_element %6: %*Foo.refcounted, #object  	// user: %10
  %10 = load %9: %**Foo  	// user: %11
  %11 = load %10: %*Foo  	// user: %12
  %12 = struct_extract %11: %Foo, #a  	// user: %13
  %13 = call @print_tI (%12: %Int) 
  %14 = load %6: %*Foo.refcounted  	// user: %c
  variable_decl %c = %14: %Foo.refcounted  	// user: %16
  %15 = alloc %Foo.refcounted  	// users: %16, nil, %17, %23
  store %c in %15: %*Foo.refcounted 
  %17 = retain_object %15: %*Foo.refcounted 
  %18 = string_literal "memes"  	// user: %20
  %19 = int_literal 6  	// user: %20
  %20 = call @String_topi64 (%18: %Builtin.OpaquePointer, %19: %Builtin.Int64)  	// user: %21
  %21 = call @print_tString (%20: %String) 
  %22 = release_object %6: %*Foo.refcounted 
  %23 = release_object %15: %*Foo.refcounted 
  return ()
}

func @fooGen_tI : &thin (%Int) -> %Foo.refcounted {
$entry(%$0: %Int):
  %0 = call @Foo_tI (%$0: %Int)  	// user: %2
  %1 = alloc %Foo.refcounted  	// users: %2, nil, %3
  store %0 in %1: %*Foo.refcounted 
  %3 = load %1: %*Foo.refcounted  	// user: %4
  return %3
}