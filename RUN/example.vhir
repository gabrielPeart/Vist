
type %Bool = { %Builtin.Bool }
type %Int = { %Builtin.Int64 }

func @main : () -> %Builtin.Void {
$entry:
  break $cond

$cond:			// preds: entry, loop
  %1 = bool_literal false  	// uses: %2
  %2 = struct %Bool (%1: %Builtin.Bool)  	// uses: %cond
  %cond = struct_extract %2: %Bool, #Bool.value  	// uses: 
  break %cond: %Builtin.Bool, $loop, $loop.exit

$loop:			// preds: cond
  %4 = int_literal 1  	// uses: %5
  %5 = struct %Int (%4: %Builtin.Int64)  	// uses: %6
  %6 = call @print_Int (%5: %Int) 
  break $cond

$loop.exit:			// preds: cond
  return ()
}

func @print_Int : (%Int) -> %Builtin.Void