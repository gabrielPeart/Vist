

type Meme {
    let a: Int = 0
    let b: Int = 0

    init Int Int = |x y| {
        a = x
        b = y
    }

    func foo: Int -> Int = do return 1
}


let x = Meme(2 3)

print(x.a)
print(x.b)


/*
func iterate: () -> Int -> Int = do
    return |a| do
        return a + 1

let i = iterate()

let x = i(8)

print(x)

func foo: Int Int -> Int = |a b| do
    return a + b

func bar: Int = do print($0)

func fact: Int -> Int = |a| do
    if a <= 1 do
        return foo(0 1)
    else do
        return a * fact(a - 1)

let y = fact(10)
bar(y)


var tot = 0

for i in 0 ... 10000 do
    if i % 3 == 0 || i % 5 == 0 do
        tot = tot + i

print(tot)
*/

