
concept Eq {
    var a: Int, b: Int
}

func foo :: Eq Int -> Int = (a b) do
    return a.b + b + a.a


type Bar {
    var x: Bool, b: Int, a: Int
}

let bar = Bar true 11 4
let foo = foo bar 2

print foo // test: 17




concept TestC {
    var t: Int
}

type Foo {
    var t: Int
}

type Baz {
    var foo: TestC
}

let b = Baz (Foo 1)
let u = b.foo.t
print u // test: 1


