
// type foo, { i64 i64 } type
// implicit memberwise initialser is added
type StackOf2 {
    var a: Int
    var b: Int
    
    func sum :: () -> Int = do return a + b
    func pop :: () -> Int = do return b
}

func push :: Int StackOf2 -> StackOf2 = (val stack) do
    return StackOf2 stack.b val

func empty :: -> StackOf2 = do
    return StackOf2 0 0


var stack = StackOf2 2 10

print (stack.sum ())
// test: 12

stack = push 3 stack
print (stack.pop ())
// test: 3

stack = empty ()

print stack.a == stack.b
// test: true

